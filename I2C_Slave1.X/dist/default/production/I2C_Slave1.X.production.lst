

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 25 17:39:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  001F                     _ADCON0bits	set	31
   363  001E                     _ADRESH	set	30
   364  000B                     _INTCONbits	set	11
   365  0008                     _PORTD	set	8
   366  0014                     _SSPCONbits	set	20
   367  000C                     _PIR1bits	set	12
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  0063                     _SSPIF	set	99
   371  005E                     _PEIE	set	94
   372  005F                     _GIE	set	95
   373  009F                     _ADCON1bits	set	159
   374  008C                     _PIE1bits	set	140
   375  0089                     _TRISEbits	set	137
   376  0089                     _TRISE	set	137
   377  0094                     _SSPSTATbits	set	148
   378  0091                     _SSPCON2bits	set	145
   379  0087                     _TRISCbits	set	135
   380  0094                     _SSPSTAT	set	148
   381  0093                     _SSPADD	set	147
   382  0091                     _SSPCON2	set	145
   383  04A0                     _BF	set	1184
   384  0463                     _SSPIE	set	1123
   385  043C                     _TRISC4	set	1084
   386  043B                     _TRISC3	set	1083
   387  0188                     _ANSELbits	set	392
   388  0189                     _ANSELH	set	393
   389  0188                     _ANSEL	set	392
   390                           
   391                           ; #config settings
   392  0000                     
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395  000F                     __initialization:	
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  0011                     __end_of__initialization:	
   404  0011  0183               	clrf	3
   405  0012  120A  118A  28D4   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408  0078                     __pbssCOMMON:	
   409  0078                     _dato:	
   410  0078                     	ds	1
   411  0079                     _z:	
   412  0079                     	ds	1
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:	
   416  0070                     ?_setup:	
   417  0070                     ?_ADC_init:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_ADC_conf:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_I2C_Slave_Init:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_isr:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_isr:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435                           
   436                           ; 1 bytes @ 0x0
   437  0070                     	ds	3
   438  0073                     ??_ADC_init:	
   439  0073                     ??_ADC_conf:	
   440                           ; 1 bytes @ 0x3
   441                           
   442  0073                     ??_I2C_Slave_Init:	
   443                           ; 1 bytes @ 0x3
   444                           
   445  0073                     I2C_Slave_Init@address:	
   446                           ; 1 bytes @ 0x3
   447                           
   448                           
   449                           ; 1 bytes @ 0x3
   450  0073                     	ds	2
   451  0075                     ADC_conf@ADCNum:	
   452                           
   453                           ; 1 bytes @ 0x5
   454  0075                     	ds	1
   455  0076                     ??_setup:	
   456  0076                     ??_main:	
   457                           ; 1 bytes @ 0x6
   458                           
   459                           
   460                           ; 1 bytes @ 0x6
   461  0076                     	ds	2
   462                           
   463                           	psect	maintext
   464  00D4                     __pmaintext:	
   465 ;;
   466 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   467 ;;
   468 ;; *************** function _main *****************
   469 ;; Defined at:
   470 ;;		line 92 in file "main_S1.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : B00/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          2       0       0       0       0
   487 ;;      Totals:         2       0       0       0       0
   488 ;;Total ram usage:        2 bytes
   489 ;; Hardware stack levels required when called:    3
   490 ;; This function calls:
   491 ;;		_setup
   492 ;; This function is called by:
   493 ;;		Startup code after reset
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _main
   499  00D4                     _main:	
   500  00D4                     l875:	
   501                           ;incstack = 0
   502                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   503                           
   504                           
   505                           ;main_S1.c: 93:     setup();
   506  00D4  120A  118A  20A0  120A  118A  	fcall	_setup
   507  00D9                     l877:	
   508                           
   509                           ;main_S1.c: 98:         dato = ADRESH;
   510  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   511  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   512  00DB  081E               	movf	30,w	;volatile
   513  00DC  00F6               	movwf	??_main
   514  00DD  0876               	movf	??_main,w
   515  00DE  00F8               	movwf	_dato
   516  00DF                     l879:	
   517                           
   518                           ;main_S1.c: 99:         ADCON0bits.GO_DONE=1;
   519  00DF  149F               	bsf	31,1	;volatile
   520  00E0                     l881:	
   521                           
   522                           ;main_S1.c: 100:         _delay((unsigned long)((10)*(4000000/4000.0)));
   523  00E0  300D               	movlw	13
   524  00E1  00F7               	movwf	??_main+1
   525  00E2  30FB               	movlw	251
   526  00E3  00F6               	movwf	??_main
   527  00E4                     u157:	
   528  00E4  0BF6               	decfsz	??_main,f
   529  00E5  28E4               	goto	u157
   530  00E6  0BF7               	decfsz	??_main+1,f
   531  00E7  28E4               	goto	u157
   532  00E8  28E9               	nop2
   533  00E9  28D9               	goto	l877
   534  00EA  120A  118A  280C   	ljmp	start
   535  00ED                     __end_of_main:	
   536                           
   537                           	psect	text1
   538  00A0                     __ptext1:	
   539 ;; *************** function _setup *****************
   540 ;; Defined at:
   541 ;;		line 107 in file "main_S1.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    2
   562 ;; This function calls:
   563 ;;		_ADC_conf
   564 ;;		_ADC_init
   565 ;;		_I2C_Slave_Init
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _setup
   573  00A0                     _setup:	
   574  00A0                     l789:	
   575                           ;incstack = 0
   576                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   577                           
   578                           
   579                           ;main_S1.c: 108:     ANSEL = 0;
   580  00A0  1683               	bsf	3,5	;RP0=1, select bank3
   581  00A1  1703               	bsf	3,6	;RP1=1, select bank3
   582  00A2  0188               	clrf	8	;volatile
   583                           
   584                           ;main_S1.c: 109:     ANSELH = 0;
   585  00A3  0189               	clrf	9	;volatile
   586                           
   587                           ;main_S1.c: 111:     TRISE = 0;
   588  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   589  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   590  00A6  0189               	clrf	9	;volatile
   591  00A7                     l791:	
   592                           
   593                           ;main_S1.c: 112:     TRISEbits.TRISE0 = 1;
   594  00A7  1409               	bsf	9,0	;volatile
   595  00A8                     l793:	
   596                           
   597                           ;main_S1.c: 114:     ADC_init();
   598  00A8  120A  118A  20ED  120A  118A  	fcall	_ADC_init
   599  00AD                     l795:	
   600                           
   601                           ;main_S1.c: 115:     ADC_conf(0);
   602  00AD  3000               	movlw	0
   603  00AE  120A  118A  207C  120A  118A  	fcall	_ADC_conf
   604  00B3                     l797:	
   605                           
   606                           ;main_S1.c: 116:     I2C_Slave_Init(0x50);
   607  00B3  3050               	movlw	80
   608  00B4  120A  118A  20BA  120A  118A  	fcall	_I2C_Slave_Init
   609  00B9                     l125:	
   610  00B9  0008               	return
   611  00BA                     __end_of_setup:	
   612                           
   613                           	psect	text2
   614  00BA                     __ptext2:	
   615 ;; *************** function _I2C_Slave_Init *****************
   616 ;; Defined at:
   617 ;;		line 93 in file "I2C.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  address         1    wreg     unsigned char 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  address         1    3[COMMON] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         1       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0
   634 ;;      Totals:         1       0       0       0       0
   635 ;;Total ram usage:        1 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_setup
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _I2C_Slave_Init
   647  00BA                     _I2C_Slave_Init:	
   648                           
   649                           ;incstack = 0
   650                           ; Regs used in _I2C_Slave_Init: [wreg]
   651                           ;I2C_Slave_Init@address stored from wreg
   652  00BA  00F3               	movwf	I2C_Slave_Init@address
   653  00BB                     l739:	
   654                           
   655                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   656  00BB  0873               	movf	I2C_Slave_Init@address,w
   657  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   658  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   659  00BE  0093               	movwf	19	;volatile
   660                           
   661                           ;I2C.c: 96:     SSPCON = 0x36;
   662  00BF  3036               	movlw	54
   663  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   664  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   665  00C2  0094               	movwf	20	;volatile
   666                           
   667                           ;I2C.c: 97:     SSPSTAT = 0x80;
   668  00C3  3080               	movlw	128
   669  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   670  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   671  00C6  0094               	movwf	20	;volatile
   672                           
   673                           ;I2C.c: 98:     SSPCON2 = 0x01;
   674  00C7  3001               	movlw	1
   675  00C8  0091               	movwf	17	;volatile
   676  00C9                     l741:	
   677                           
   678                           ;I2C.c: 99:     TRISC3 = 1;
   679  00C9  1587               	bsf	7,3	;volatile
   680  00CA                     l743:	
   681                           
   682                           ;I2C.c: 100:     TRISC4 = 1;
   683  00CA  1607               	bsf	7,4	;volatile
   684  00CB                     l745:	
   685                           
   686                           ;I2C.c: 101:     GIE = 1;
   687  00CB  178B               	bsf	11,7	;volatile
   688  00CC                     l747:	
   689                           
   690                           ;I2C.c: 102:     PEIE = 1;
   691  00CC  170B               	bsf	11,6	;volatile
   692  00CD                     l749:	
   693                           
   694                           ;I2C.c: 103:     SSPIF = 0;
   695  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   696  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   697  00CF  118C               	bcf	12,3	;volatile
   698  00D0                     l751:	
   699                           
   700                           ;I2C.c: 104:     SSPIE = 1;
   701  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   702  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   703  00D2  158C               	bsf	12,3	;volatile
   704  00D3                     l55:	
   705  00D3  0008               	return
   706  00D4                     __end_of_I2C_Slave_Init:	
   707                           
   708                           	psect	text3
   709  00ED                     __ptext3:	
   710 ;; *************** function _ADC_init *****************
   711 ;; Defined at:
   712 ;;		line 38 in file "ADC.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_setup
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _ADC_init
   742  00ED                     _ADC_init:	
   743  00ED                     l753:	
   744                           ;incstack = 0
   745                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
   746                           
   747                           
   748                           ;ADC.c: 40:     ANSEL = 0;
   749  00ED  1683               	bsf	3,5	;RP0=1, select bank3
   750  00EE  1703               	bsf	3,6	;RP1=1, select bank3
   751  00EF  0188               	clrf	8	;volatile
   752  00F0                     l755:	
   753                           
   754                           ;ADC.c: 41:     ANSELbits.ANS5 =1;
   755  00F0  1688               	bsf	8,5	;volatile
   756  00F1                     l757:	
   757                           
   758                           ;ADC.c: 42:     ANSELbits.ANS6 =1;
   759  00F1  1708               	bsf	8,6	;volatile
   760  00F2                     l759:	
   761                           
   762                           ;ADC.c: 44:     PIE1bits.ADIE=1;
   763  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   764  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   765  00F4  170C               	bsf	12,6	;volatile
   766  00F5                     l761:	
   767                           
   768                           ;ADC.c: 45:     PIR1bits.ADIF=1;
   769  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   770  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   771  00F7  170C               	bsf	12,6	;volatile
   772  00F8                     l763:	
   773                           
   774                           ;ADC.c: 47:     ADCON0bits.ADCS=01;
   775  00F8  081F               	movf	31,w	;volatile
   776  00F9  393F               	andlw	-193
   777  00FA  3840               	iorlw	64
   778  00FB  009F               	movwf	31	;volatile
   779  00FC                     l765:	
   780                           
   781                           ;ADC.c: 48:     ADCON0bits.GO_nDONE=0;
   782  00FC  109F               	bcf	31,1	;volatile
   783  00FD                     l767:	
   784                           
   785                           ;ADC.c: 50:     ADCON0bits.ADON=1;
   786  00FD  141F               	bsf	31,0	;volatile
   787  00FE                     l769:	
   788                           
   789                           ;ADC.c: 52:     ADCON1bits.ADFM=0;
   790  00FE  1683               	bsf	3,5	;RP0=1, select bank1
   791  00FF  1303               	bcf	3,6	;RP1=0, select bank1
   792  0100  139F               	bcf	31,7	;volatile
   793  0101                     l771:	
   794                           
   795                           ;ADC.c: 54:     ADCON1bits.VCFG0=0;
   796  0101  121F               	bcf	31,4	;volatile
   797  0102                     l773:	
   798                           
   799                           ;ADC.c: 55:     ADCON1bits.VCFG1=0;
   800  0102  129F               	bcf	31,5	;volatile
   801  0103                     l147:	
   802  0103  0008               	return
   803  0104                     __end_of_ADC_init:	
   804                           
   805                           	psect	text4
   806  007C                     __ptext4:	
   807 ;; *************** function _ADC_conf *****************
   808 ;; Defined at:
   809 ;;		line 14 in file "ADC.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  ADCNum          1    wreg     unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  ADCNum          1    5[COMMON] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         1       0       0       0       0
   825 ;;      Temps:          2       0       0       0       0
   826 ;;      Totals:         3       0       0       0       0
   827 ;;Total ram usage:        3 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_setup
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _ADC_conf
   839  007C                     _ADC_conf:	
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in _ADC_conf: [wreg-fsr0h+status,2+status,0]
   843                           ;ADC_conf@ADCNum stored from wreg
   844  007C  00F5               	movwf	ADC_conf@ADCNum
   845  007D                     l775:	
   846                           
   847                           ;ADC.c: 15:     switch(ADCNum){
   848  007D  288C               	goto	l779
   849  007E                     l141:	
   850                           ;ADC.c: 16:         case 0:
   851                           
   852                           
   853                           ;ADC.c: 19:         ADCON0bits.CHS3=0;
   854  007E  1283               	bcf	3,5	;RP0=0, select bank0
   855  007F  1303               	bcf	3,6	;RP1=0, select bank0
   856  0080  129F               	bcf	31,5	;volatile
   857                           
   858                           ;ADC.c: 20:         ADCON0bits.CHS2=1;
   859  0081  161F               	bsf	31,4	;volatile
   860                           
   861                           ;ADC.c: 21:         ADCON0bits.CHS1=0;
   862  0082  119F               	bcf	31,3	;volatile
   863                           
   864                           ;ADC.c: 22:         ADCON0bits.CHS0=1;
   865  0083  151F               	bsf	31,2	;volatile
   866                           
   867                           ;ADC.c: 23:         break;
   868  0084  289C               	goto	l142
   869  0085                     l143:	
   870                           ;ADC.c: 25:         case 1:
   871                           
   872                           
   873                           ;ADC.c: 28:         ADCON0bits.CHS3=0;
   874  0085  1283               	bcf	3,5	;RP0=0, select bank0
   875  0086  1303               	bcf	3,6	;RP1=0, select bank0
   876  0087  129F               	bcf	31,5	;volatile
   877                           
   878                           ;ADC.c: 29:         ADCON0bits.CHS2=1;
   879  0088  161F               	bsf	31,4	;volatile
   880                           
   881                           ;ADC.c: 30:         ADCON0bits.CHS1=1;
   882  0089  159F               	bsf	31,3	;volatile
   883                           
   884                           ;ADC.c: 31:         ADCON0bits.CHS0=0;
   885  008A  111F               	bcf	31,2	;volatile
   886                           
   887                           ;ADC.c: 32:         break;
   888  008B  289C               	goto	l142
   889  008C                     l779:	
   890  008C  0875               	movf	ADC_conf@ADCNum,w
   891  008D  00F3               	movwf	??_ADC_conf
   892  008E  01F4               	clrf	??_ADC_conf+1
   893                           
   894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 1, Range of values is 0 to 0
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte            4     3 (average)
   900                           ; direct_byte           11     8 (fixed)
   901                           ; jumptable            260     6 (fixed)
   902                           ;	Chosen strategy is simple_byte
   903  008F  0874               	movf	??_ADC_conf+1,w
   904  0090  3A00               	xorlw	0	; case 0
   905  0091  1903               	skipnz
   906  0092  2894               	goto	l903
   907  0093  289C               	goto	l142
   908  0094                     l903:	
   909                           
   910                           ; Switch size 1, requested type "simple"
   911                           ; Number of cases is 2, Range of values is 0 to 1
   912                           ; switch strategies available:
   913                           ; Name         Instructions Cycles
   914                           ; simple_byte            7     4 (average)
   915                           ; direct_byte           14     8 (fixed)
   916                           ; jumptable            260     6 (fixed)
   917                           ;	Chosen strategy is simple_byte
   918  0094  0873               	movf	??_ADC_conf,w
   919  0095  3A00               	xorlw	0	; case 0
   920  0096  1903               	skipnz
   921  0097  287E               	goto	l141
   922  0098  3A01               	xorlw	1	; case 1
   923  0099  1903               	skipnz
   924  009A  2885               	goto	l143
   925  009B  289C               	goto	l142
   926  009C                     l142:	
   927                           
   928                           ;ADC.c: 34:     ADCON0bits.GO_DONE=1;
   929  009C  1283               	bcf	3,5	;RP0=0, select bank0
   930  009D  1303               	bcf	3,6	;RP1=0, select bank0
   931  009E  149F               	bsf	31,1	;volatile
   932  009F                     l144:	
   933  009F  0008               	return
   934  00A0                     __end_of_ADC_conf:	
   935                           
   936                           	psect	text5
   937  0015                     __ptext5:	
   938 ;; *************** function _isr *****************
   939 ;; Defined at:
   940 ;;		line 52 in file "main_S1.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          3       0       0       0       0
   957 ;;      Totals:         3       0       0       0       0
   958 ;;Total ram usage:        3 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		Interrupt level 1
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _isr
   969  0015                     _isr:	
   970  0015                     i1l839:	
   971                           
   972                           ;main_S1.c: 53:    if(PIR1bits.SSPIF == 1){
   973  0015  1283               	bcf	3,5	;RP0=0, select bank0
   974  0016  1303               	bcf	3,6	;RP1=0, select bank0
   975  0017  1D8C               	btfss	12,3	;volatile
   976  0018  281A               	goto	u5_21
   977  0019  281B               	goto	u5_20
   978  001A                     u5_21:	
   979  001A  286F               	goto	i1l100
   980  001B                     u5_20:	
   981  001B                     i1l841:	
   982                           
   983                           ;main_S1.c: 55:         SSPCONbits.CKP = 0;
   984  001B  1214               	bcf	20,4	;volatile
   985                           
   986                           ;main_S1.c: 57:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   987  001C  1B14               	btfsc	20,6	;volatile
   988  001D  281F               	goto	u6_21
   989  001E  2820               	goto	u6_20
   990  001F                     u6_21:	
   991  001F  2824               	goto	i1l845
   992  0020                     u6_20:	
   993  0020                     i1l843:	
   994  0020  1F94               	btfss	20,7	;volatile
   995  0021  2823               	goto	u7_21
   996  0022  2824               	goto	u7_20
   997  0023                     u7_21:	
   998  0023  282B               	goto	i1l853
   999  0024                     u7_20:	
  1000  0024                     i1l845:	
  1001                           
  1002                           ;main_S1.c: 58:             z = SSPBUF;
  1003  0024  0813               	movf	19,w	;volatile
  1004  0025  00F0               	movwf	??_isr
  1005  0026  0870               	movf	??_isr,w
  1006  0027  00F9               	movwf	_z
  1007  0028                     i1l847:	
  1008                           
  1009                           ;main_S1.c: 59:             SSPCONbits.SSPOV = 0;
  1010  0028  1314               	bcf	20,6	;volatile
  1011  0029                     i1l849:	
  1012                           
  1013                           ;main_S1.c: 60:             SSPCONbits.WCOL = 0;
  1014  0029  1394               	bcf	20,7	;volatile
  1015  002A                     i1l851:	
  1016                           
  1017                           ;main_S1.c: 61:             SSPCONbits.CKP = 1;
  1018  002A  1614               	bsf	20,4	;volatile
  1019  002B                     i1l853:	
  1020                           
  1021                           ;main_S1.c: 64:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1022  002B  1683               	bsf	3,5	;RP0=1, select bank1
  1023  002C  1303               	bcf	3,6	;RP1=0, select bank1
  1024  002D  1A94               	btfsc	20,5	;volatile
  1025  002E  2830               	goto	u8_21
  1026  002F  2831               	goto	u8_20
  1027  0030                     u8_21:	
  1028  0030  284C               	goto	i1l104
  1029  0031                     u8_20:	
  1030  0031                     i1l855:	
  1031  0031  1914               	btfsc	20,2	;volatile
  1032  0032  2834               	goto	u9_21
  1033  0033  2835               	goto	u9_20
  1034  0034                     u9_21:	
  1035  0034  284C               	goto	i1l104
  1036  0035                     u9_20:	
  1037  0035                     i1l857:	
  1038                           
  1039                           ;main_S1.c: 66:             z = SSPBUF;
  1040  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0037  0813               	movf	19,w	;volatile
  1043  0038  00F0               	movwf	??_isr
  1044  0039  0870               	movf	??_isr,w
  1045  003A  00F9               	movwf	_z
  1046  003B                     i1l859:	
  1047                           
  1048                           ;main_S1.c: 68:             PIR1bits.SSPIF = 0;
  1049  003B  118C               	bcf	12,3	;volatile
  1050  003C                     i1l861:	
  1051                           
  1052                           ;main_S1.c: 69:             SSPCONbits.CKP = 1;
  1053  003C  1614               	bsf	20,4	;volatile
  1054  003D                     i1l105:	
  1055                           ;main_S1.c: 70:             while(!SSPSTATbits.BF);
  1056                           
  1057  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1058  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1059  003F  1C14               	btfss	20,0	;volatile
  1060  0040  2842               	goto	u10_21
  1061  0041  2843               	goto	u10_20
  1062  0042                     u10_21:	
  1063  0042  283D               	goto	i1l105
  1064  0043                     u10_20:	
  1065  0043                     i1l863:	
  1066                           
  1067                           ;main_S1.c: 71:             PORTD = SSPBUF;
  1068  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0045  0813               	movf	19,w	;volatile
  1071  0046  0088               	movwf	8	;volatile
  1072                           
  1073                           ;main_S1.c: 72:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1074  0047  3053               	movlw	83
  1075  0048  00F0               	movwf	??_isr
  1076  0049                     u16_27:	
  1077  0049  0BF0               	decfsz	??_isr,f
  1078  004A  2849               	goto	u16_27
  1079                           
  1080                           ;main_S1.c: 74:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1081  004B  286C               	goto	i1l108
  1082  004C                     i1l104:	
  1083  004C  1A94               	btfsc	20,5	;volatile
  1084  004D  284F               	goto	u11_21
  1085  004E  2850               	goto	u11_20
  1086  004F                     u11_21:	
  1087  004F  286C               	goto	i1l108
  1088  0050                     u11_20:	
  1089  0050                     i1l865:	
  1090  0050  1D14               	btfss	20,2	;volatile
  1091  0051  2853               	goto	u12_21
  1092  0052  2854               	goto	u12_20
  1093  0053                     u12_21:	
  1094  0053  286C               	goto	i1l108
  1095  0054                     u12_20:	
  1096  0054                     i1l867:	
  1097                           
  1098                           ;main_S1.c: 75:             z = SSPBUF;
  1099  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0056  0813               	movf	19,w	;volatile
  1102  0057  00F0               	movwf	??_isr
  1103  0058  0870               	movf	??_isr,w
  1104  0059  00F9               	movwf	_z
  1105  005A                     i1l869:	
  1106                           
  1107                           ;main_S1.c: 76:             BF = 0;
  1108  005A  1683               	bsf	3,5	;RP0=1, select bank1
  1109  005B  1303               	bcf	3,6	;RP1=0, select bank1
  1110  005C  1014               	bcf	20,0	;volatile
  1111                           
  1112                           ;main_S1.c: 77:             SSPBUF = dato;
  1113  005D  0878               	movf	_dato,w
  1114  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1115  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0060  0093               	movwf	19	;volatile
  1117  0061                     i1l871:	
  1118                           
  1119                           ;main_S1.c: 78:             SSPCONbits.CKP = 1;
  1120  0061  1614               	bsf	20,4	;volatile
  1121                           
  1122                           ;main_S1.c: 79:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1123  0062  3053               	movlw	83
  1124  0063  00F0               	movwf	??_isr
  1125  0064                     u17_27:	
  1126  0064  0BF0               	decfsz	??_isr,f
  1127  0065  2864               	goto	u17_27
  1128  0066                     i1l110:	
  1129                           ;main_S1.c: 80:             while(SSPSTATbits.BF);
  1130                           
  1131  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1132  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1133  0068  1814               	btfsc	20,0	;volatile
  1134  0069  286B               	goto	u13_21
  1135  006A  286C               	goto	u13_20
  1136  006B                     u13_21:	
  1137  006B  2866               	goto	i1l110
  1138  006C                     u13_20:	
  1139  006C                     i1l108:	
  1140                           
  1141                           ;main_S1.c: 82:         PIR1bits.SSPIF = 0;
  1142  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1143  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1144  006E  118C               	bcf	12,3	;volatile
  1145  006F                     i1l100:	
  1146                           ;main_S1.c: 83:     }
  1147                           
  1148                           
  1149                           ;main_S1.c: 84:    if (PIR1bits.ADIF==1){
  1150  006F  1F0C               	btfss	12,6	;volatile
  1151  0070  2872               	goto	u14_21
  1152  0071  2873               	goto	u14_20
  1153  0072                     u14_21:	
  1154  0072  2875               	goto	i1l114
  1155  0073                     u14_20:	
  1156  0073                     i1l873:	
  1157                           
  1158                           ;main_S1.c: 85:         INTCONbits.GIE=0;
  1159  0073  138B               	bcf	11,7	;volatile
  1160                           
  1161                           ;main_S1.c: 86:         PIR1bits.ADIF=0;
  1162  0074  130C               	bcf	12,6	;volatile
  1163  0075                     i1l114:	
  1164  0075  0872               	movf	??_isr+2,w
  1165  0076  008A               	movwf	10
  1166  0077  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1167  0078  0083               	movwf	3
  1168  0079  0EFE               	swapf	btemp,f
  1169  007A  0E7E               	swapf	btemp,w
  1170  007B  0009               	retfie
  1171  007C                     __end_of_isr:	
  1172  007E                     btemp	set	126	;btemp
  1173  007E                     wtemp0	set	126
  1174                           
  1175                           	psect	intentry
  1176  0004                     __pintentry:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _isr: [wreg]
  1179                           
  1180  0004                     interrupt_function:	
  1181  007E                     saved_w	set	btemp
  1182  0004  00FE               	movwf	btemp
  1183  0005  0E03               	swapf	3,w
  1184  0006  00F1               	movwf	??_isr+1
  1185  0007  080A               	movf	10,w
  1186  0008  00F2               	movwf	??_isr+2
  1187  0009  120A  118A  2815   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_ADC_conf

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              6 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      30
                           _ADC_conf
                           _ADC_init
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_conf                                             3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _ADC_conf
     _ADC_init
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 25 17:39:40 2020

          ADC_conf@ADCNum 0075                         _z 0079               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                        l55 00D3  
                     l141 007E                       l125 00B9                       l142 009C  
                     l143 0085                       l144 009F                       l147 0103  
                     l741 00C9                       l903 0094                       l751 00D0  
                     l743 00CA                       l761 00F5                       l753 00ED  
                     l745 00CB                       l771 0101                       l763 00F8  
                     l755 00F0                       l747 00CC                       l739 00BB  
                     l773 0102                       l765 00FC                       l757 00F1  
                     l749 00CD                       l775 007D                       l767 00FD  
                     l759 00F2                       l791 00A7                       l769 00FE  
                     l793 00A8                       l881 00E0                       l779 008C  
                     l795 00AD                       l875 00D4                       l797 00B3  
                     l789 00A0                       l877 00D9                       l879 00DF  
                     _GIE 005F                       u157 00E4              __CFG_CPD$OFF 0000  
                     _isr 0015              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    _PEIE 005E                      u5_20 001B                      u5_21 001A  
                    u6_20 0020                      u6_21 001F                      u7_20 0024  
                    u7_21 0023                      u8_20 0031                      u8_21 0030  
                    u9_20 0035                      u9_21 0034              __CFG_WRT$OFF 0000  
                    _dato 0078                      _main 00D4                      btemp 007E  
                    start 000C          __end_of_ADC_conf 00A0          __end_of_ADC_init 0104  
           __CFG_IESO$OFF 0000                     ??_isr 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l100 006F  
                   i1l110 0066                     i1l104 004C                     i1l105 003D  
                   i1l114 0075                     i1l108 006C                     i1l841 001B  
                   i1l851 002A                     i1l843 0020                     i1l861 003C  
                   i1l853 002B                     i1l845 0024                     i1l871 0061  
                   i1l863 0043                     i1l855 0031                     i1l847 0028  
                   i1l839 0015                     i1l873 0073                     i1l865 0050  
                   i1l857 0035                     i1l849 0029                     i1l867 0054  
                   i1l859 003B                     i1l869 005A                     u10_20 0043  
                   u10_21 0042                     u11_20 0050                     u11_21 004F  
                   u12_20 0054                     u12_21 0053                     u13_20 006C  
                   u13_21 006B                     u14_20 0073                     u14_21 0072  
                   u16_27 0049                     u17_27 0064                     _PORTD 0008  
                   _SSPIE 0463                     _TRISE 0089                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _setup 00A0            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00ED  
                  ??_main 0076                    _ADRESH 001E                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    saved_w 007E                 ?_ADC_conf 0070  
               ?_ADC_init 0070   __end_of__initialization 0011            __pcstackCOMMON 0070  
 __size_of_I2C_Slave_Init 001A             __end_of_setup 00BA                ??_ADC_conf 0073  
              ??_ADC_init 0073                   ??_setup 0076     I2C_Slave_Init@address 0073  
              __pmaintext 00D4                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                 _ANSELbits 0188                   __ptext1 00A0  
                 __ptext2 00BA                   __ptext3 00ED                   __ptext4 007C  
                 __ptext5 0015              __size_of_isr 0067      end_of_initialization 0011  
          _I2C_Slave_Init 00BA                 _TRISCbits 0087                 _TRISEbits 0089  
       __size_of_ADC_conf 0024         __size_of_ADC_init 0017    __end_of_I2C_Slave_Init 00D4  
     start_initialization 000F               __end_of_isr 007C  __CFG_FOSC$INTRC_NOCLKOUT 0000  
         ?_I2C_Slave_Init 0070               __pbssCOMMON 0078                 ___latbits 0002  
                _ADC_conf 007C                  _ADC_init 00ED            __size_of_setup 001A  
       interrupt_function 0004                  _PIE1bits 008C                  _PIR1bits 000C  
              _ADCON0bits 001F                _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000  
        ??_I2C_Slave_Init 0073             __size_of_main 0019                _INTCONbits 000B  
                intlevel1 0000               _SSPCON2bits 0091                _SSPCONbits 0014  
